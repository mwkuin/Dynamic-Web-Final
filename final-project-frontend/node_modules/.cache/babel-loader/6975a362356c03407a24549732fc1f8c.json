{"ast":null,"code":"var _jsxFileName = \"/Users/morgankuin/Documents/GitHub/Dynamic-Web-Final/final-project-frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\nimport \"firebase/auth\"; //Pages\n\nimport CreateAccount from \"./pages/CreateAccount\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\"; //Styles\n\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState({}); //Config\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCLBJ4w65_RjpE54Sq9ujOtlBRVFIeG6AY\",\n    authDomain: \"final-project-37ede.firebaseapp.com\",\n    databaseURL: \"https://final-project-37ede.firebaseio.com\",\n    projectId: \"final-project-37ede\",\n    storageBucket: \"final-project-37ede.appspot.com\",\n    messagingSenderId: \"200354381478\",\n    appId: \"1:200354381478:web:9450e6350274fc268f3e67\"\n  }; //ensure app is initialized when it is ready to be\n\n  useEffect(() => {\n    //ensure app is not initialized more than once\n    //is firebase already initialized?\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } //Setting auth to be persistent in SESSION storage, not cookies\n    //You can also use cookies with firebase but we're using session\n    //because it is easier to work with\n\n\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).catch(function (e) {\n      console.log('AUTH ERROR', e);\n    });\n  }, [firebaseConfig]); //Check to see if user is logged in\n  //User loads page, check status -> set state accordingly\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        //Logged in\n        setUserInfo(user);\n        setLoggedIn(true);\n      } else {\n        //Not logged in\n        setUserInfo({});\n        setLoggedIn(false);\n      }\n\n      setLoading(false);\n    });\n  }, []); //Login\n\n  function LoginFunction(e) {\n    e.preventDefault();\n    let email = e.currentTarget.loginEmail.value;\n    let password = e.currentTarget.loginPassword.value;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      console.log(\"LOGIN RESPONSE\", response);\n      setLoggedIn(true);\n    }).catch(function (error) {\n      console.log(\"LOGIN ERROR\", error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateAccount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/morgankuin/Documents/GitHub/Dynamic-Web-Final/final-project-frontend/src/App.js"],"names":["React","useEffect","useState","Route","BrowserRouter","Router","Redirect","firebase","CreateAccount","Home","Login","App","loggedIn","setLoggedIn","loading","setLoading","userInfo","setUserInfo","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","apps","length","initializeApp","auth","setPersistence","Auth","Persistence","SESSION","catch","e","console","log","onAuthStateChanged","user","LoginFunction","preventDefault","email","currentTarget","loginEmail","value","password","loginPassword","signInWithEmailAndPassword","then","response","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\nimport \"firebase/auth\";\n\n//Pages\nimport CreateAccount from \"./pages/CreateAccount\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\n\n\n//Styles\nimport './App.css';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [userInfo, setUserInfo] = useState({});\n\n//Config\n  const firebaseConfig = {\n      apiKey: \"AIzaSyCLBJ4w65_RjpE54Sq9ujOtlBRVFIeG6AY\",\n      authDomain: \"final-project-37ede.firebaseapp.com\",\n      databaseURL: \"https://final-project-37ede.firebaseio.com\",\n      projectId: \"final-project-37ede\",\n      storageBucket: \"final-project-37ede.appspot.com\",\n      messagingSenderId: \"200354381478\",\n      appId: \"1:200354381478:web:9450e6350274fc268f3e67\"\n    };\n\n    //ensure app is initialized when it is ready to be\n    useEffect(() => {\n      //ensure app is not initialized more than once\n      //is firebase already initialized?\n      if(!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n      }\n    //Setting auth to be persistent in SESSION storage, not cookies\n    //You can also use cookies with firebase but we're using session\n    //because it is easier to work with\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.SESSION)\n      .catch(function(e) {\n        console.log('AUTH ERROR', e);\n      });\n    }, [firebaseConfig]);\n\n\n    //Check to see if user is logged in\n    //User loads page, check status -> set state accordingly\n    useEffect(() => {\n      firebase.auth().onAuthStateChanged(function (user) {\n      if(user) {\n        //Logged in\n        setUserInfo(user);\n        setLoggedIn(true);\n      } else {\n        //Not logged in\n        setUserInfo({});\n        setLoggedIn(false);\n      }\n        setLoading(false);\n      });\n      }, []);\n\n      //Login\n      function LoginFunction(e) {\n        e.preventDefault();\n        let email = e.currentTarget.loginEmail.value;\n        let password = e.currentTarget.loginPassword.value;\n\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(function(response) {\n          console.log(\"LOGIN RESPONSE\", response);\n          setLoggedIn(true);\n        })\n        .catch(function(error) {\n          console.log(\"LOGIN ERROR\", error)\n        });\n      }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/create-account\">\n          <CreateAccount />\n        </Route>\n      </Router>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}